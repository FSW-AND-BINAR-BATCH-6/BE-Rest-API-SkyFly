{
  "openapi": "3.0.0",
  "info": {
    "title": "team01-api-Skyfly Express-rest API Swagger Documentation",
    "description": "Development For Final Project Binar FSW1 Team1 Fullstack Dashboard for a library designed to manage library data and a library website utilizing, Express.js as the backend and Postgress as the Database Management System (DBMS). Github: [TEAM1-API-SKYFLY](https://github.com/orgs/FSW-AND-BINAR-BATCH-6/repositories)",
    "version": "1.0.0",
    "license": {
      "name": "ISC",
      "url": "https://spdx.org/licenses/ISC.html"
    },
    "contact": {
      "name": "team1-FSW1",
      "url": "https://github.com/orgs/FSW-AND-BINAR-BATCH-6/repositories"
    }
  },
  "tags": [
    {
      "name": "Auths",
      "description": "this is the API for AUTHS resources"
    },
    {
      "name": "Airlines",
      "description": "this is the API for AIRLINES resources"
    },
    {
      "name": "Airports",
      "description": "this is the API for AIRPORTS resources"
    },
    {
      "name": "Flights",
      "description": "this is the API for FLIGHTS resources"
    },
    {
      "name": "Flight Seats",
      "description": "this is the API for FLIGHT SEATS resources"
    },
    {
      "name": "Tickets",
      "description": "this is the API for TICKETS resources"
    },
    {
      "name": "Transactions",
      "description": "this is the API for TRANSACTIONS resources"
    },
    {
      "name": "Transactions Detail",
      "description": "this is the API for TRANSACTIONS DETAIL resources" 
    },
    {
      "name": "Users",
      "description": "this is the API for USERS resources"
    }
  ],
  "servers": [
    {
      "url": "https://backend-skyfly-c1.vercel.app/api/v1",
      "description": "deployment"
    },
    {
      "url": "http://localhost:2000/api/v1",
      "description": "localhost"
    }
  ],
  "paths": {

    "/auth/login": {
      "post": {
        "tags": ["Auths"],
        "summary": "Return result of user login API",
        "description": "This API is for user login",
        "requestBody": {
          "description": "Request body for successful user login",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "skyflyproduction1@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status":{
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User logged in successfully"
                    },
                    "_token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNsd2hoaThrMjAwMDYzMjFlaGJxdzQ5ZWUiLCJuYW1lIjoiQWxpY2UiLCJlbWFpbCI6ImFsaWNlQHRlc3QuY29tIiwicGhvbmVOdW1iZXIiOiI2MjgxMjM0NTY3ODkiLCJpYXQiOjE3MTYzNjE4ODgsImV4cCI6MTcxNjQ0ODI4OH0.a74iFFNbBH1WoYABtONscTY4-2LdD7qjtaGnBkEEA4Q"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Wrong password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Wrong password"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wrong email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "email not registered"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Email invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "\"email\" must be a valid email"
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Password invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 423
                    },
                    "message": {
                      "type": "string",
                      "example": "\"password\" length must be at least 8 characters long"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/google": {
      "get": {
        "tags": ["Auths"],
        "summary": "Return result of user login API by google auth",
        "description": "This API is for user login by google auth",
        "requestBody": {
          "description": "Request body for successful user login",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "skyflyproduction1@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status":{
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User logged in successfully"
                    },
                    "_token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNsd2hoaThrMjAwMDYzMjFlaGJxdzQ5ZWUiLCJuYW1lIjoiQWxpY2UiLCJlbWFpbCI6ImFsaWNlQHRlc3QuY29tIiwicGhvbmVOdW1iZXIiOiI2MjgxMjM0NTY3ODkiLCJpYXQiOjE3MTYzNjE4ODgsImV4cCI6MTcxNjQ0ODI4OH0.a74iFFNbBH1WoYABtONscTY4-2LdD7qjtaGnBkEEA4Q"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Wrong password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Wrong password"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wrong email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "email not registered"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Email invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "\"email\" must be a valid email"
                    }
                  }
                }
              }
            }
          },
          "423": {
            "description": "Password invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 423
                    },
                    "message": {
                      "type": "string",
                      "example": "\"password\" length must be at least 8 characters long"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgetPassword": {
      "post": {
        "tags": ["Auths"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Return result of user forget password",
        "description": "This API is for user forget password",
        "requestBody": {
          "description": "Request body for forget password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "skyflyproduction1@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sending link to email for reset password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password link has been sent, please check your email"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Wrong email",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "user is not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Email invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "\"email\" must be a valid email"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/resetPassword": {
      "put": {
        "tags": ["Auths"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Return result of user forget password",
        "description": "This API is for user forget password",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyZWdpc3RlcklkIjoiYTY2ZDgxZTQtMmNhNC00NGRiLTlkOWItNTg5NzA2MDA2NTRlIiwiZW1haWwiOiJ2aWVyeTE1MTAyMDAyQGdtYWlsLmNvbSIsIm90cCI6IjQ5NTYwMyIsImVtYWlsVGl0bGUiOiJFbWFpbCBBY3RpdmF0aW9uIiwiaWF0IjoxNzE2Njk4NjE0LCJleHAiOjE3MTY3ODUwMTR9.Vpr5MJY6yQsd8xwqK-cdrpOyRoYAXVwnnuT5UQuunvE"
            },
            "description": "Token"
          }
        ],
        "requestBody": {
          "description": "Request body for reset password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "password"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "passwordbaru"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "user password updated successfully"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is invalid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auths"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Returns the result of the registration API",
        "description": "This API is used for user registration.",
        "requestBody": {
          "description": "Request body for successful registration.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "skyfly"
                  },
                  "email": {
                    "type": "string",
                    "example": "skyflyproduction1@gmail.com"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "0909099091222"
                  },
                  "password": {
                    "type": "string",
                    "example": "skyfly123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Verification token has been sent, please check your email"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                          "name" : {
                            "type": "string",
                            "example": "skyfly"
                          },
                          "email": {
                            "type": "string",
                            "example": "skyflyproduction1@gmail.com"
                          },
                          "phoneNumber": {
                            "type": "string",
                            "example": "0909099091222"
                          },
                          "role": {
                            "type": "string",
                            "example": "BUYER"
                          }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed to register member",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "name, email, and password must be filled"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Failed"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "email is already registered"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Field error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": 422
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "\"email\" is required"
                        }
                      }
                    }
                  }
                }
              }
            }
          } 
        }
      }
    },
    "/auth/verified": {
      "put": {
        "tags": ["Auths"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Return result of otp verification",
        "description": "This API is for otp verification",
        "requestBody": {
          "description": "Request body for otp verification",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "string",
                    "example": "808987"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "user email verified successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Token invalid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is invalid"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid otp token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "OTP Token is invalid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Invalid token by system",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "invalid token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/verified/resend-otp": {
      "post": {
        "tags": ["Auths"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Return result of resend otp",
        "description": "This API is for resend otp",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyZWdpc3RlcklkIjoiYTY2ZDgxZTQtMmNhNC00NGRiLTlkOWItNTg5NzA2MDA2NTRlIiwiZW1haWwiOiJ2aWVyeTE1MTAyMDAyQGdtYWlsLmNvbSIsIm90cCI6IjQ5NTYwMyIsImVtYWlsVGl0bGUiOiJFbWFpbCBBY3RpdmF0aW9uIiwiaWF0IjoxNzE2Njk4NjE0LCJleHAiOjE3MTY3ODUwMTR9.Vpr5MJY6yQsd8xwqK-cdrpOyRoYAXVwnnuT5UQuunvE"
            },
            "description": "Token"
          }
        ],
        "requestBody": {
          "description": "Request body for resend otp",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "skyflyproduction1@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "resending the otp",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "otp resended"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Email has been verified",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 403
                    },
                    "message": {
                      "type": "string",
                      "example": "User email has been verified"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Login failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Wrong Password or user not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/": {
      "get": {
        "tags": ["Auths"],
        "summary": "Return result HIT API get all user",
        "description": "This is an API for getting all user",
        "responses": {
          "200": {
            "description": "Success getting all user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "totalItems" : {
                      "type": "integer",
                      "example": 1
                    },
                    "pagination" : {
                      "type": "object",
                      "example": {
                        "totalPages": 1,
                        "currentPage": 1,
                        "pageItems": 1,
                        "nextPage": null,
                        "prevPage": null
                      }
                    },
                    "data": {
                      "type": "object",
                      "example": {
                            "id": "5648be31-0085-451b-894e-559ed24c13f6",
                            "name": "skyfly",
                            "role": "BUYER",
                            "phoneNumber": "6289636883782",
                            "auth": {
                              "id": "658b6dfe-19fb-4889-825d-54edde6d38d1",
                              "email": "skyflyproduction1@gmail.com",
                              "isVerified": true
                            }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Auths"],
        "security": [
          {
            "bearerToken": []
          }
        ],
        "summary": "Return result HIT API get my data",
        "description": "This is an API for getting my data",
        "responses": {
          "200": {
            "description": "Success getting my data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "example": {
                          "id": "5648be31-0085-451b-894e-559ed24c13f6",
                          "name": "skyfly",
                          "role": "BUYER",
                          "phoneNumber": "62895638069206",
                          "Auth": {
                            "id": "658b6dfe-19fb-4889-825d-54edde6d38d1",
                            "email": "skyflyproduction1@gmail.com",
                            "isVerified": true
                            }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/airlines/": {
      "get": {
        "tags": ["Airlines"],
        "summary": "Return result HIT API get all airlines data",
        "description": "This is an API for getting all airlines data",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Page Number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 5
            },
            "description": "Limit Page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success getting all airlines data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "all airlines data retrieved successfully"
                    },
                    "pagination":{
                      "type": "object",
                      "example": {
                        "totalPage": 2,
                        "currentPage": 1,
                        "pageItems": 10,
                        "nextPage": 2,
                        "prevPage": null
                      }
                    },
                    "data": {
                      "type": "object",
                      "example": [
                        {
                          "id": "239b8080-e92c-40a1-8525-190e93d04a67",
                          "code": "FW",
                          "name": "Graff Zeppeline",
                          "image": "https://placehold.co/600x400"
                        },
                        {
                          "id": "43276466-02aa-45ef-83c5-8edcbe763e08",
                          "code": "GZ",
                          "name": "Graff Zeppeline",
                          "image": "https://placehold.co/600x400"
                        },
                        {
                          "id": "clwsogve2000ka8mj0h1tjsny",
                          "code": "GA",
                          "name": "Garuda Indonesia",
                          "image": "https://tnvdosywgayukanmlhqw.supabase.co/storage/v1/object/public/Final/public/airplanes/1716536772224.png"
                        },
                        {
                          "id": "clwsogve5000la8mjc1lb144l",
                          "code": "SJ",
                          "name": "Sriwijaya Air",
                          "image": "https://tnvdosywgayukanmlhqw.supabase.co/storage/v1/object/public/Final/public/airplanes/1716536772224.png"
                        },
                        {
                          "id": "clwsogve7000ma8mj5h4eghgc",
                          "code": "QG",
                          "name": "Citilink",
                          "image": "https://tnvdosywgayukanmlhqw.supabase.co/storage/v1/object/public/Final/public/airplanes/1716536772224.png"
                        },
                        {
                          "id": "clwsogve8000na8mjwfq777yk",
                          "code": "JT",
                          "name": "Lion Air",
                          "image": "https://tnvdosywgayukanmlhqw.supabase.co/storage/v1/object/public/Final/public/airplanes/1716536772224.png"
                        },
                        {
                          "id": "clwsogvea000oa8mjl5xsoks6",
                          "code": "ID",
                          "name": "Batik Air",
                          "image": "https://tnvdosywgayukanmlhqw.supabase.co/storage/v1/object/public/Final/public/airplanes/1716536772224.png"
                        },
                        {
                          "id": "clwsogveb000pa8mj6g6daxuu",
                          "code": "IN",
                          "name": "Nam Air",
                          "image": "https://tnvdosywgayukanmlhqw.supabase.co/storage/v1/object/public/Final/public/airplanes/1716536772224.png"
                        },
                        {
                          "id": "clwsogved000qa8mj82gvrmx3",
                          "code": "IW",
                          "name": "Wings Air",
                          "image": "https://tnvdosywgayukanmlhqw.supabase.co/storage/v1/object/public/Final/public/airplanes/1716536772224.png"
                        },
                        {
                          "id": "clwsogvee000ra8mjzn0o75oa",
                          "code": "KD",
                          "name": "Kalimantan Airlines",
                          "image": "https://tnvdosywgayukanmlhqw.supabase.co/storage/v1/object/public/Final/public/airplanes/1716536772224.png"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Airlines"],
        "summary": "Return result HIT API create airline",
        "description": "This is an API for creating airline data",
        "requestBody": {
          "description": "This is a request body for create new airline",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "GZ"
                  },
                  "name": {
                    "type": "string",
                    "example": "Graff Zeppeline"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new airline data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message":{
                      "type": "string",
                      "example": "Airline created successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "43276466-02aa-45ef-83c5-8edcbe763e08",
                        "code": "GZ",
                        "name": "Graff Zeppeline",
                        "image": "https://placehold.co/600x400"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/airlines/{id}": {
      "get": {
        "tags": ["Airlines"],
        "summary": "Return result HIT API get airline by id",
        "description": "This is an API for getting airline data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "239b8080-e92c-40a1-8525-190e93d04a67"
            },
            "description": "Airline ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success getting airline data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message" : {
                      "type": "string",
                      "example": "airline data retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "239b8080-e92c-40a1-8525-190e93d04a67",
                        "code": "FW",
                        "name": "Graff Zeppeline",
                        "image": "https://placehold.co/600x400"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Airlines"],
        "summary": "Return result HIT API update airline by Id",
        "description": "This is an API for updatting airline data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "239b8080-e92c-40a1-8525-190e93d04a67"
            },
            "description": "Airline ID"
          }
        ],
        "requestBody": {
          "description": "This is a request body for update airline",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "FW"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success editting airline data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message":{
                      "type":"string",
                      "example":"Airline updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "239b8080-e92c-40a1-8525-190e93d04a67",
                        "code": "FW",
                        "name": "Graff Zeppeline",
                        "image": "https://placehold.co/600x400"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Airlines"],
        "summary": "Return result HIT API delete airline by Id",
        "description": "This is an API for deletting airline data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "239b8080-e92c-40a1-8525-190e93d04a67"
            },
            "description": "Airline ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success deletting airplane data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "airline deleted successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/airports/": {
      "get": {
        "tags": ["Airports"],
        "summary": "Return result HIT API get all airports data",
        "description": "This is an API for getting all airports data",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Page Number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 5
            },
            "description": "Limit Page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success getting all airports data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "all airports data retrieved successfully"
                    },
                    "totalItems":{
                      "type": "integer",
                      "example":20
                    },
                    "pagination":{
                      "type": "object",
                      "example": {
                        "totalPage": 2,
                        "currentPage": 1,
                        "pageItems": 10,
                        "nextPage": 2,
                        "prevPage": null
                      }
                    },
                    "data": {
                      "type": "object",
                      "example": [
                        {
                          "id": "clwsogvch0000a8mjkpg46ier",
                          "name": "Soekarno-Hatta International Airport",
                          "code": "CGK",
                          "country": "Indonesia",
                          "city": "Jakarta"
                        },
                        {
                          "id": "clwsogvcp0001a8mjsiyaac9p",
                          "name": "Ngurah Rai International Airport",
                          "code": "DPS",
                          "country": "Indonesia",
                          "city": "Denpasar"
                        },
                        {
                          "id": "clwsogvcr0002a8mjipuphcsb",
                          "name": "Juanda International Airport",
                          "code": "SUB",
                          "country": "Indonesia",
                          "city": "Surabaya"
                        },
                        {
                          "id": "clwsogvct0003a8mjruv4c6kj",
                          "name": "Kuala Namu International Airport",
                          "code": "KNO",
                          "country": "Indonesia",
                          "city": "Medan"
                        },
                        {
                          "id": "clwsogvcv0004a8mjw89nzggc",
                          "name": "Sultan Hasanuddin International Airport",
                          "code": "UPG",
                          "country": "Indonesia",
                          "city": "Makassar"
                        },
                        {
                          "id": "clwsogvcx0005a8mjzc3t9k9y",
                          "name": "Ahmad Yani International Airport",
                          "code": "SRG",
                          "country": "Indonesia",
                          "city": "Semarang"
                        },
                        {
                          "id": "clwsogvd00006a8mjxg8ll1cn",
                          "name": "Husein Sastranegara International Airport",
                          "code": "BDO",
                          "country": "Indonesia",
                          "city": "Bandung"
                        },
                        {
                          "id": "clwsogvd40007a8mjl5yu2023",
                          "name": "Adisutjipto International Airport",
                          "code": "JOG",
                          "country": "Indonesia",
                          "city": "Yogyakarta"
                        },
                        {
                          "id": "clwsogvdh0008a8mjy7xix1pw",
                          "name": "Sepinggan International Airport",
                          "code": "BPN",
                          "country": "Indonesia",
                          "city": "Balikpapan"
                        },
                        {
                          "id": "clwsogvdj0009a8mj6hngjmse",
                          "name": "Sultan Syarif Kasim II International Airport",
                          "code": "PKU",
                          "country": "Indonesia",
                          "city": "Pekanbaru"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Airports"],
        "summary": "Return result HIT API create airport",
        "description": "This is an API for creating airport data",
        "requestBody": {
          "description": "This is a request body for create new airport",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "example": "AAP"
                  },
                  "name": {
                    "type": "string",
                    "example": "APT Pranoto"
                  },
                  "country":{
                    "type": "string",
                    "example": "Indonesia"
                  },
                  "city": {
                    "type": "string",
                    "example": "Samarinda"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new airport data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message":{
                      "type": "string",
                      "example": "Airport created successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "db423cc7-6342-4eb4-97c2-1e7c67d6455c",
                        "name": "APT Pranoto",
                        "code": "AAP",
                        "country": "Indonesia",
                        "city": "Samarinda"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/airports/{id}": {
      "get": {
        "tags": ["Airports"],
        "summary": "Return result HIT API get airport by id",
        "description": "This is an API for getting airport data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "db423cc7-6342-4eb4-97c2-1e7c67d6455c"
            },
            "description": "Airport ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success getting airport data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message" : {
                      "type": "string",
                      "example": "airport data retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "db423cc7-6342-4eb4-97c2-1e7c67d6455c",
                        "name": "APT Pranoto",
                        "code": "AAP",
                        "country": "Indonesia",
                        "city": "Samarinda"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Airports"],
        "summary": "Return result HIT API update airport by Id",
        "description": "This is an API for updatting airport data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "db423cc7-6342-4eb4-97c2-1e7c67d6455c"
            },
            "description": "Airport ID"
          }
        ],
        "requestBody": {
          "description": "This is a request body for update airport",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Aji Pangeran Tumenggung Pranoto"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success editting airport data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message":{
                      "type":"string",
                      "example":"Airport updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "db423cc7-6342-4eb4-97c2-1e7c67d6455c",
                        "name": "Aji Pangeran Tumenggung Pranoto",
                        "code": "AAP",
                        "country": "Indonesia",
                        "city": "Samarinda"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Airports"],
        "summary": "Return result HIT API delete airport by Id",
        "description": "This is an API for deletting airport data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "df40ab7a-e0f9-4e85-bbe1-0e6c6da34303"
            },
            "description": "Airport ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success deletting airplane data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "airport deleted successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },


    "/flights/": {
      "get": {
        "tags": ["Flights"],
        "parameters" :[
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "CGK"
            },
            "description": "Search place"
          },
          {
            "name": "page",
            "in":"query",
            "required":false,
            "schema":{
              "type":"integer",
              "example":1
            },
            "description": "Page Number"
          },
          {
            "name": "limit",
            "in":"query",
            "required":false,
            "schema":{
              "type":"integer",
              "example": 5
            },
            "description": "Limit Page"
          }
        ],
        "summary": "Return result HIT API get all flights data",
        "description": "This is an API for getting all flights data",
        "responses": {
          "200": {
            "description": "Success getting all flights data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "all flight data retrieved successfully"
                    },
                    "totalItems":{
                      "type":"integer",
                      "example": 9
                    },
                    "pagination":{
                      "type":"object",
                      "example": {
                        "totalPages": 2,
                        "currentPage": 1,
                        "pageItems": 5,
                        "nextPage": 2,
                        "prevPage": null
                      }
                    },
                    "data": {
                      "type": "object",
                      "example": [
                        {
                          "id": "clwte48ff001m1108rwz025zc",
                          "planeId": "clwte46f9000l1108gkx3j7hg",
                          "departureDate": "2024-06-03T10:00:00.000Z",
                          "departureAirport": {
                            "id": "clwte46b7000011085wol5fht",
                            "name": "Soekarno-Hatta International Airport",
                            "code": "CGK",
                            "country": "Indonesia",
                            "city": "Jakarta"
                          },
                          "transit": null,
                          "arrivalDate": "2024-06-03T14:00:00.000Z",
                          "destinationAirport": {
                            "id": "clwte46b700031108iu82baof",
                            "name": "Kuala Namu International Airport",
                            "code": "KNO",
                            "country": "Indonesia",
                            "city": "Medan"
                          },
                          "capacity": 72,
                          "price": 1300000,
                          "facilities": null
                        },
                        {
                          "id": "clwte48ff001n11085j0p2kp3",
                          "planeId": "clwte46f9000k1108xn2jpitl",
                          "departureDate": "2024-06-01T08:00:00.000Z",
                          "departureAirport": {
                            "id": "clwte46b7000011085wol5fht",
                            "name": "Soekarno-Hatta International Airport",
                            "code": "CGK",
                            "country": "Indonesia",
                            "city": "Jakarta"
                          },
                          "transit": null,
                          "arrivalDate": "2024-06-01T12:00:00.000Z",
                          "destinationAirport": {
                            "id": "clwte46b700011108s7xlpib3",
                            "name": "Ngurah Rai International Airport",
                            "code": "DPS",
                            "country": "Indonesia",
                            "city": "Denpasar"
                          },
                          "capacity": 72,
                          "price": 1500000,
                          "facilities": null
                        },
                        {
                          "id": "clwte48ff001o11087wren5fg",
                          "planeId": "clwte46f9000l1108gkx3j7hg",
                          "departureDate": "2024-06-04T11:00:00.000Z",
                          "departureAirport": {
                            "id": "clwte46b7000011085wol5fht",
                            "name": "Soekarno-Hatta International Airport",
                            "code": "CGK",
                            "country": "Indonesia",
                            "city": "Jakarta"
                          },
                          "transit": null,
                          "arrivalDate": "2024-06-04T15:00:00.000Z",
                          "destinationAirport": {
                            "id": "clwte46b700041108lli6r8mw",
                            "name": "Sultan Hasanuddin International Airport",
                            "code": "UPG",
                            "country": "Indonesia",
                            "city": "Makassar"
                          },
                          "capacity": 72,
                          "price": 1400000,
                          "facilities": null
                        },
                        {
                          "id": "clwte48ff001p1108kq2cd8ss",
                          "planeId": "clwte46f9000k1108xn2jpitl",
                          "departureDate": "2024-06-02T09:00:00.000Z",
                          "departureAirport": {
                            "id": "clwte46b7000011085wol5fht",
                            "name": "Soekarno-Hatta International Airport",
                            "code": "CGK",
                            "country": "Indonesia",
                            "city": "Jakarta"
                          },
                          "transit": null,
                          "arrivalDate": "2024-06-02T13:00:00.000Z",
                          "destinationAirport": {
                            "id": "clwte46b700021108mjnqfhpp",
                            "name": "Juanda International Airport",
                            "code": "SUB",
                            "country": "Indonesia",
                            "city": "Surabaya"
                          },
                          "capacity": 72,
                          "price": 1200000,
                          "facilities": null
                        },
                        {
                          "id": "clwte48fi001r1108j9j8glwh",
                          "planeId": "clwte46f9000m1108ix4gsg0e",
                          "departureDate": "2024-06-05T12:00:00.000Z",
                          "departureAirport": {
                            "id": "clwte46b7000011085wol5fht",
                            "name": "Soekarno-Hatta International Airport",
                            "code": "CGK",
                            "country": "Indonesia",
                            "city": "Jakarta"
                          },
                          "transit": null,
                          "arrivalDate": "2024-06-05T16:00:00.000Z",
                          "destinationAirport": {
                            "id": "clwte46b700051108mej3a2uk",
                            "name": "Ahmad Yani International Airport",
                            "code": "SRG",
                            "country": "Indonesia",
                            "city": "Semarang"
                          },
                          "capacity": 72,
                          "price": 1100000,
                          "facilities": null
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Flights"],
        "summary": "Return result HIT API create flight",
        "description": "This is an API for creating flight data",
        "requestBody": {
          "description": "This is a request body for create new flight",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planeId": {
                    "type": "string",
                    "example": "30c490e4-bf07-4844-ac33-f52bc46a6c2d"
                  },
                  "departureDate": {
                    "type": "string",
                    "example": "2024-05-20 10:00:30"
                  },
                  "departureAirportId": {
                    "type": "string",
                    "example": "ad910a4f-4e16-45b4-abd3-a06201e66559"
                  },
                  "arrivalDate": {
                    "type": "string",
                    "example": "2024-05-21 11:45:00"
                  },
                  "destinationAirportId": {
                    "type": "string",
                    "example": "aa8eae43-f60c-435c-b787-b8525e406249"
                  },
                  "price": {
                    "type": "integer",
                    "example": 350
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new flight data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Flight created successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "a264b66a-e8af-4d22-9ffb-febc34c0c149",
                        "planeId": "30c490e4-bf07-4844-ac33-f52bc46a6c2d",
                        "departureDate": "2024-05-20T10:00:30.000Z",
                        "departureAirportId": "ad910a4f-4e16-45b4-abd3-a06201e66559",
                        "arrivalDate": "2024-05-21T11:45:00.000Z",
                        "destinationAirportId": "aa8eae43-f60c-435c-b787-b8525e406249",
                        "price": 350,
                        "departureAirport": {
                          "id": "ad910a4f-4e16-45b4-abd3-a06201e66559",
                          "name": "Toronto Pearson International Airport",
                          "code": "YYZ",
                          "country": "Canada",
                          "city": "Toronto"
                        },
                        "destinationAirport": {
                          "id": "aa8eae43-f60c-435c-b787-b8525e406249",
                          "name": "Soekarno-Hatta International Airport",
                          "code": "CGK",
                          "country": "Indonesia",
                          "city": "Jakarta"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flights/{id}": {
      "get": {
        "tags": ["Flights"],
        "summary": "Return result HIT API get flight by id",
        "description": "This is an API for getting flight data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "926a8bd5-6926-44a0-b73d-ee119ece9e2e"
            },
            "description": "flight ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success getting flight data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message" : {
                      "type": "string",
                      "example": "flight data retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "413f96a6-164d-4725-9137-c7b2ffefb7c2",
                        "planeId": "30c490e4-bf07-4844-ac33-f52bc46a6c2d",
                        "departureDate": "2024-05-20T03:00:30.000Z",
                        "departureAirportId": "5c3bcb6f-e43a-438a-804a-e3a9bf15e3fe",
                        "arrivalDate": "2024-05-21T04:45:00.000Z",
                        "destinationAirportId": "aa8eae43-f60c-435c-b787-b8525e406249",
                        "price": 350,
                        "departureAirport": {
                          "id": "5c3bcb6f-e43a-438a-804a-e3a9bf15e3fe",
                          "name": "Juanda International Airport",
                          "code": "SUB",
                          "country": "Indonesia",
                          "city": "Surabaya"
                        },
                        "destinationAirport": {
                          "id": "aa8eae43-f60c-435c-b787-b8525e406249",
                          "name": "Soekarno-Hatta International Airport",
                          "code": "CGK",
                          "country": "Indonesia",
                          "city": "Jakarta"
                        },
                        "airplane": {
                          "id": "30c490e4-bf07-4844-ac33-f52bc46a6c2d",
                          "code": "ABC-12",
                          "name": "Garuda",
                          "image": "https://qdetodfuvaidjkygantp.supabase.co//storage/v1/object/public/skyfly/public/airplanes/1716604504758.png"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Flights"],
        "summary": "Return result HIT API update flight by Id",
        "description": "This is an API for updatting flight data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "9daa8d69-0160-4591-addd-0d224b363ef9"
            },
            "description": "flight ID"
          }
        ],
        "requestBody": {
          "description": "This is a request body for update flight",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "planeId": {
                    "type": "string",
                    "example": "30c490e4-bf07-4844-ac33-f52bc46a6c2d"
                  },
                  "departureDate": {
                    "type": "string",
                    "example": "2024-05-20 10:00:30"
                  },
                  "departureAirportId": {
                    "type": "string",
                    "example": "ad910a4f-4e16-45b4-abd3-a06201e66559"
                  },
                  "arrivalDate": {
                    "type": "string",
                    "example": "2024-05-21 11:45:00"
                  },
                  "destinationAirportId": {
                    "type": "string",
                    "example": "5c3bcb6f-e43a-438a-804a-e3a9bf15e3fe"
                  },
                  "price": {
                    "type": "integer",
                    "example": 3500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success editting transaction data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Flight updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "beforeUpdate": {
                          "id": "9daa8d69-0160-4591-addd-0d224b363ef9",
                          "planeId": "30c490e4-bf07-4844-ac33-f52bc46a6c2d",
                          "departureDate": "2024-05-20T03:00:30.000Z",
                          "departureAirportId": "ad910a4f-4e16-45b4-abd3-a06201e66559",
                          "arrivalDate": "2024-05-21T04:45:00.000Z",
                          "destinationAirportId": "5c3bcb6f-e43a-438a-804a-e3a9bf15e3fe",
                          "price": 3500
                        },
                        "afterUpdate": {
                          "id": "9daa8d69-0160-4591-addd-0d224b363ef9",
                          "planeId": "30c490e4-bf07-4844-ac33-f52bc46a6c2d",
                          "departureDate": "2024-05-20T03:00:30.000Z",
                          "departureAirportId": "ad910a4f-4e16-45b4-abd3-a06201e66559",
                          "arrivalDate": "2024-05-21T04:45:00.000Z",
                          "destinationAirportId": "5c3bcb6f-e43a-438a-804a-e3a9bf15e3fe",
                          "price": 3500,
                          "departureAirport": {
                            "id": "ad910a4f-4e16-45b4-abd3-a06201e66559",
                            "name": "Toronto Pearson International Airport",
                            "code": "YYZ",
                            "country": "Canada",
                            "city": "Toronto"
                          },
                          "destinationAirport": {
                            "id": "5c3bcb6f-e43a-438a-804a-e3a9bf15e3fe",
                            "name": "Juanda International Airport",
                            "code": "SUB",
                            "country": "Indonesia",
                            "city": "Surabaya"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Flights"],
        "summary": "Return result HIT API delete flight by Id",
        "description": "This is an API for deletting flight data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "101df269-0b32-4dc7-952d-9eeadae548f2"
            },
            "description": "flight ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success deletting flight data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "flight deleted successfully"
                    },
                    "deletedData": {
                      "type": "object",
                      "example": {
                        "id": "101df269-0b32-4dc7-952d-9eeadae548f2",
                        "planeId": "30c490e4-bf07-4844-ac33-f52bc46a6c2d",
                        "departureDate": "2024-05-20T10:00:30.000Z",
                        "departureAirportId": "ad910a4f-4e16-45b4-abd3-a06201e66559",
                        "arrivalDate": "2024-05-21T11:45:00.000Z",
                        "destinationAirportId": "aa8eae43-f60c-435c-b787-b8525e406249",
                        "price": 350
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/flightSeats/": {
      "get": {
        "tags": ["Flight Seats"],
        "summary": "Return result HIT API get all flight-seats data",
        "description": "This is an API for getting all flight-seats data",
        "parameters" :[
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ECONOMY"
            },
            "description": "Search Class"
          },
          {
            "name": "page",
            "in":"query",
            "required":false,
            "schema":{
              "type":"integer",
              "example":1
            },
            "description": "Page Number"
          },
          {
            "name": "limit",
            "in":"query",
            "required":false,
            "schema":{
              "type":"integer",
              "example": 5
            },
            "description": "Limit Page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success getting all flight-seats data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Available flight seats data retrieved successfully"
                    },
                    "totalItems": {
                      "type": "integer",
                      "example": 12
                    },
                    "pagination" :{
                      "type": "object",
                      "example" : {
                        "totalPages": 3,
                        "currentPage": 1,
                        "pageItems": 5,
                        "nextPage": 2,
                        "prevPage": null
                      }
                    },
                    "data": {
                      "type": "object",
                      "example": [
                        {
                          "id": "02420c4a-9444-462e-b23c-727a3c36ebe0",
                          "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                          "seatNumber": "14A",
                          "isBooked": false,
                          "type": "ECONOMY"
                        },
                        {
                          "id": "05e38121-82b9-4f0d-a278-d4571e9ae806",
                          "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                          "seatNumber": "4A",
                          "isBooked": false,
                          "type": "BUSINESS"
                        },
                        {
                          "id": "1d22d31e-422a-4c8e-b58a-a12149b0e1db",
                          "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                          "seatNumber": "11A",
                          "isBooked": false,
                          "type": "ECONOMY"
                        },
                        {
                          "id": "31c78c30-d28a-4bfe-97d4-45fbb03a1576",
                          "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                          "seatNumber": "16A",
                          "isBooked": false,
                          "type": "ECONOMY"
                        },
                        {
                          "id": "67a46b20-d63c-401a-b609-957d29ebc878",
                          "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                          "seatNumber": "6A",
                          "isBooked": false,
                          "type": "BUSINESS"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Flight Seats"],
        "summary": "Return result HIT API create flight-seat",
        "description": "This is an API for creating flight-seat data",
        "requestBody": {
          "description": "This is a request body for create new flight-seat",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "flightId": {
                    "type": "string",
                    "example": "63c1eb31-14f0-4069-b5f1-487572f3c886"
                  },
                  "seatNumber": {
                    "type": "string",
                    "example": "6A"
                  },
                  "type": {
                    "type": "string",
                    "example": "BUSINESS"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new flight-seat data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "67a46b20-d63c-401a-b609-957d29ebc878",
                        "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                        "seatNumber": "6A",
                        "isBooked": false,
                        "type": "BUSINESS"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flightSeats/{id}": {
      "get": {
        "tags": ["Flight Seats"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "63c1eb31-14f0-4069-b5f1-487572f3c886"
            },
            "description": "flight ID"
          }
        ],
        "summary": "Return result HIT API get flight-seat by id",
        "description": "This is an API for getting flight-seat data based on Id",
        "responses": {
          "200": {
            "description": "Success getting flight-seat data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message" : {
                      "type": "string",
                      "example": "All flight seats data retrieved successfully"
                    },
                    "totalItems":{
                      "type": "integer",
                      "example": 13
                    },
                    "pagination":{
                      "type": "object",
                      "example": {
                        "totalPages": 3,
                        "currentPage": 1,
                        "pageItems": 5,
                        "nextPage": 2,
                        "prevPage": null
                      }
                    },
                    "data": {
                      "type": "object",
                      "example": [
                        {
                          "id": "02420c4a-9444-462e-b23c-727a3c36ebe0",
                          "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                          "seatNumber": "14A",
                          "isBooked": false,
                          "type": "ECONOMY",
                          "flight": {
                            "id": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                            "planeId": "af5ac02d-0a93-4c8f-b05c-2b3ed5006009",
                            "departureDate": "2024-05-20T11:00:30.000Z",
                            "departureAirportId": "1fefba20-23d4-4a8b-848b-77a2bf5f6012",
                            "arrivalDate": "2024-05-21T12:45:00.000Z",
                            "destinationAirportId": "1fefba20-23d4-4a8b-848b-77a2bf5f6012",
                            "capacity": 59,
                            "price": 350
                          }
                        },
                        {
                          "id": "05e38121-82b9-4f0d-a278-d4571e9ae806",
                          "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                          "seatNumber": "4A",
                          "isBooked": false,
                          "type": "BUSINESS",
                          "flight": {
                            "id": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                            "planeId": "af5ac02d-0a93-4c8f-b05c-2b3ed5006009",
                            "departureDate": "2024-05-20T11:00:30.000Z",
                            "departureAirportId": "1fefba20-23d4-4a8b-848b-77a2bf5f6012",
                            "arrivalDate": "2024-05-21T12:45:00.000Z",
                            "destinationAirportId": "1fefba20-23d4-4a8b-848b-77a2bf5f6012",
                            "capacity": 59,
                            "price": 350
                          }
                        },
                        {
                          "id": "1d22d31e-422a-4c8e-b58a-a12149b0e1db",
                          "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                          "seatNumber": "11A",
                          "isBooked": false,
                          "type": "ECONOMY",
                          "flight": {
                            "id": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                            "planeId": "af5ac02d-0a93-4c8f-b05c-2b3ed5006009",
                            "departureDate": "2024-05-20T11:00:30.000Z",
                            "departureAirportId": "1fefba20-23d4-4a8b-848b-77a2bf5f6012",
                            "arrivalDate": "2024-05-21T12:45:00.000Z",
                            "destinationAirportId": "1fefba20-23d4-4a8b-848b-77a2bf5f6012",
                            "capacity": 59,
                            "price": 350
                          }
                        },
                        {
                          "id": "2280cc43-b453-4f2d-98ae-007335d843c8",
                          "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                          "seatNumber": "12A",
                          "isBooked": true,
                          "type": "ECONOMY",
                          "flight": {
                            "id": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                            "planeId": "af5ac02d-0a93-4c8f-b05c-2b3ed5006009",
                            "departureDate": "2024-05-20T11:00:30.000Z",
                            "departureAirportId": "1fefba20-23d4-4a8b-848b-77a2bf5f6012",
                            "arrivalDate": "2024-05-21T12:45:00.000Z",
                            "destinationAirportId": "1fefba20-23d4-4a8b-848b-77a2bf5f6012",
                            "capacity": 59,
                            "price": 350
                          }
                        },
                        {
                          "id": "31c78c30-d28a-4bfe-97d4-45fbb03a1576",
                          "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                          "seatNumber": "16A",
                          "isBooked": false,
                          "type": "ECONOMY",
                          "flight": {
                            "id": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                            "planeId": "af5ac02d-0a93-4c8f-b05c-2b3ed5006009",
                            "departureDate": "2024-05-20T11:00:30.000Z",
                            "departureAirportId": "1fefba20-23d4-4a8b-848b-77a2bf5f6012",
                            "arrivalDate": "2024-05-21T12:45:00.000Z",
                            "destinationAirportId": "1fefba20-23d4-4a8b-848b-77a2bf5f6012",
                            "capacity": 59,
                            "price": 350
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Flight Seats"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "63c1eb31-14f0-4069-b5f1-487572f3c886"
            },
            "description": "flight ID"
          }
        ],
        "summary": "Return result HIT API for booking seat by flight seat's id",
        "description": "This is an API for booking seat by flight seat's id",
        "responses": {
          "200": {
            "description": "Success booking seat by flight seat's id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Flight seat booked successfully"
                    },
                    "bookedFlightSeat": {
                      "type": "object",
                      "example": {
                        "id": "02420c4a-9444-462e-b23c-727a3c36ebe0",
                        "flightId": "63c1eb31-14f0-4069-b5f1-487572f3c886",
                        "seatNumber": "14A",
                        "isBooked": true,
                        "type": "ECONOMY"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Flight Seats"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "63c1eb31-14f0-4069-b5f1-487572f3c886"
            },
            "description": "flight ID"
          }
        ],
        "summary": "Return result HIT API delete flight-seat by Id",
        "description": "This is an API for deletting flight-seat data based on Id",
        "responses": {
          "200": {
            "description": "Success deletting flight-seat data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "flight seat deleted successfully"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/tickets/": {
      "get": {
        "tags": ["Tickets"],
        "summary": "Return result HIT API get all tickets data",
        "description": "This is an API for getting all tickets data",
        "parameters" :[
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "84232417-b548-4e59-b22f-04f586057156"
            },
            "description": "Code Ticket"
          },
          {
            "name": "page",
            "in":"query",
            "required":false,
            "schema":{
              "type":"integer",
              "example":1
            },
            "description": "Page Number"
          },
          {
            "name": "limit",
            "in":"query",
            "required":false,
            "schema":{
              "type":"integer",
              "example": 5
            },
            "description": "Limit Page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success getting all tickets data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "totalItems":{
                      "type": "integer",
                      "example": 240
                    },
                    "pagination":{
                      "type": "object",
                      "example": {
                        "totalPages": 48,
                        "currentPage": 1,
                        "pageItems": 5,
                        "nextPage": 2,
                        "prevPage": null
                      }
                    },
                    "data": {
                      "type": "object",
                      "example": [
                        {
                          "id": "clwte48oe00281108r7o74j3p",
                          "code": "64ccdef1-2647-406d-8860-0e0a8ce44586",
                          "bookingDate": "2024-06-01T10:00:00.000Z",
                          "flight": {
                            "id": "clwte48ff001p1108kq2cd8ss",
                            "departureDate": "2024-06-02T09:00:00.000Z",
                            "departureAirport": {
                              "id": "clwte46b7000011085wol5fht",
                              "name": "Soekarno-Hatta International Airport",
                              "code": "CGK",
                              "country": "Indonesia",
                              "city": "Jakarta"
                            },
                            "arrivalDate": "2024-06-02T13:00:00.000Z",
                            "destinationAirport": {
                              "id": "clwte46b700021108mjnqfhpp",
                              "name": "Juanda International Airport",
                              "code": "SUB",
                              "country": "Indonesia",
                              "city": "Surabaya"
                            },
                            "price": 1200000
                          },
                          "user": null,
                          "seat": {
                            "id": "clwte48oe002411086qgx3moi",
                            "seatNumber": "1A",
                            "type": "ECONOMY"
                          }
                        },
                        {
                          "id": "clwte48oe00291108defspy04",
                          "code": "84232417-b548-4e59-b22f-04f586057156",
                          "bookingDate": "2024-06-01T10:00:00.000Z",
                          "flight": {
                            "id": "clwte48ff001p1108kq2cd8ss",
                            "departureDate": "2024-06-02T09:00:00.000Z",
                            "departureAirport": {
                              "id": "clwte46b7000011085wol5fht",
                              "name": "Soekarno-Hatta International Airport",
                              "code": "CGK",
                              "country": "Indonesia",
                              "city": "Jakarta"
                            },
                            "arrivalDate": "2024-06-02T13:00:00.000Z",
                            "destinationAirport": {
                              "id": "clwte46b700021108mjnqfhpp",
                              "name": "Juanda International Airport",
                              "code": "SUB",
                              "country": "Indonesia",
                              "city": "Surabaya"
                            },
                            "price": 1200000
                          },
                          "user": null,
                          "seat": {
                            "id": "clwte48oe00251108ot4mt02v",
                            "seatNumber": "1B",
                            "type": "ECONOMY"
                          }
                        },
                        {
                          "id": "clwte48oe002a1108xbyhdi7w",
                          "code": "453fe2d9-c906-4a45-ad34-77f37dc4e96d",
                          "bookingDate": "2024-06-01T10:00:00.000Z",
                          "flight": {
                            "id": "clwte48ff001p1108kq2cd8ss",
                            "departureDate": "2024-06-02T09:00:00.000Z",
                            "departureAirport": {
                              "id": "clwte46b7000011085wol5fht",
                              "name": "Soekarno-Hatta International Airport",
                              "code": "CGK",
                              "country": "Indonesia",
                              "city": "Jakarta"
                            },
                            "arrivalDate": "2024-06-02T13:00:00.000Z",
                            "destinationAirport": {
                              "id": "clwte46b700021108mjnqfhpp",
                              "name": "Juanda International Airport",
                              "code": "SUB",
                              "country": "Indonesia",
                              "city": "Surabaya"
                            },
                            "price": 1200000
                          },
                          "user": null,
                          "seat": {
                            "id": "clwte48oe00261108dvbkx6y9",
                            "seatNumber": "1C",
                            "type": "ECONOMY"
                          }
                        },
                        {
                          "id": "clwte48oe002b1108kq53joe4",
                          "code": "b1503963-a608-4780-860c-1d20d78025c7",
                          "bookingDate": "2024-06-01T10:00:00.000Z",
                          "flight": {
                            "id": "clwte48ff001p1108kq2cd8ss",
                            "departureDate": "2024-06-02T09:00:00.000Z",
                            "departureAirport": {
                              "id": "clwte46b7000011085wol5fht",
                              "name": "Soekarno-Hatta International Airport",
                              "code": "CGK",
                              "country": "Indonesia",
                              "city": "Jakarta"
                            },
                            "arrivalDate": "2024-06-02T13:00:00.000Z",
                            "destinationAirport": {
                              "id": "clwte46b700021108mjnqfhpp",
                              "name": "Juanda International Airport",
                              "code": "SUB",
                              "country": "Indonesia",
                              "city": "Surabaya"
                            },
                            "price": 1200000
                          },
                          "user": null,
                          "seat": {
                            "id": "clwte48oe00271108ltek2c8l",
                            "seatNumber": "1D",
                            "type": "ECONOMY"
                          }
                        },
                        {
                          "id": "clwte48of002e1108z2r5q5qq",
                          "code": "eae34b5f-5b88-4f62-848e-811ecfbc2e9d",
                          "bookingDate": "2024-06-01T10:00:00.000Z",
                          "flight": {
                            "id": "clwte48ff001p1108kq2cd8ss",
                            "departureDate": "2024-06-02T09:00:00.000Z",
                            "departureAirport": {
                              "id": "clwte46b7000011085wol5fht",
                              "name": "Soekarno-Hatta International Airport",
                              "code": "CGK",
                              "country": "Indonesia",
                              "city": "Jakarta"
                            },
                            "arrivalDate": "2024-06-02T13:00:00.000Z",
                            "destinationAirport": {
                              "id": "clwte46b700021108mjnqfhpp",
                              "name": "Juanda International Airport",
                              "code": "SUB",
                              "country": "Indonesia",
                              "city": "Surabaya"
                            },
                            "price": 1200000
                          },
                          "user": null,
                          "seat": {
                            "id": "clwte48of002d110878smid6r",
                            "seatNumber": "1E",
                            "type": "ECONOMY"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "status": false,
                    "code": 404,
                    "method": "GET",
                    "url": "/api/v1/ticket1",
                    "message": "Not Found!"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tickets"],
        "summary": "Return result HIT API create ticket",
        "description": "This is an API for creating ticket data",
        "requestBody": {
          "description": "This is a request body for create new ticket",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "flightId": {
                    "type": "integer",
                    "example": 3
                  },
                  "userId": {
                    "type": "integer",
                    "example": 3
                  },
                  "seatId": {
                    "type": "integer",
                    "example": 3
                  },
                  "bookingDate": {
                    "type": "string",
                    "example": "2024-06-02T14:00:00.000Z"
                  },
                  "price": {
                    "type": "integer",
                    "example": 30000000
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new ticket data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message":{
                      "type": "string",
                      "example": "Ticket created successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "clwotc87t0001y6reltm4f7yo",
                        "code": "UZLTTX",
                        "flightId": "3",
                        "userId": "3",
                        "seatId": "3",
                        "bookingDate": "2024-06-02T21:00:00.000Z",
                        "price": 30000000,
                        "flight": {
                          "id": "3",
                          "planeId": "3",
                          "departureDate": "1970-01-01T00:00:00.000Z",
                          "departureCity": "New York City",
                          "departureCityCode": "NYC",
                          "arrivalDate": "2024-05-28T10:00:00.000Z",
                          "destinationCity": "ALASKA",
                          "destinationCityCode": "ALS",
                          "price": 300
                        },
                        "user": {
                          "id": "3",
                          "name": "BUDI",
                          "phoneNumber": "0102898299",
                          "role": "CUSTOMER"
                        },
                        "seat": {
                          "id": "3",
                          "flightId": "3",
                          "seatNumber": "F12",
                          "isBooked": false,
                          "type": "ECONOMY"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Flight not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Flight not found"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Required error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "\"price\" is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tickets/{id}": {
      "get": {
        "tags": ["Tickets"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1"
            },
            "description": "Ticket ID"
          }
        ],
        "summary": "Return result HIT API get ticket by id",
        "description": "This is an API for getting ticket data based on Id",
        "responses": {
          "200": {
            "description": "Success getting ticket data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                      "status": {
                          "type": "boolean",
                          "example": true
                      },
                      "message": {
                          "type": "string",
                          "example": "Ticket data retrieved successfully"
                      },
                      "data": {
                          "type": "object",
                          "properties": {
                              "id": {
                                  "type": "string",
                                  "example": "1"
                              },
                              "code": {
                                  "type": "string",
                                  "example": "AAB111"
                              },
                              "flightId": {
                                  "type": "string",
                                  "example": "1"
                              },
                              "userId": {
                                  "type": "string",
                                  "example": "1"
                              },
                              "seatId": {
                                  "type": "string",
                                  "example" : "1"
                              },
                              "bookingDate": {
                                  "type": "string",
                                  "example": "2024-05-26T23:00:00.000Z"
                              },
                              "price": {
                                  "type": "integer",
                                  "example": 4000000
                              },
                              "flight": {
                                  "type": "object",
                                  "example": {
                                      "id": "1",
                                      "departureDate": "1970-01-01T00:00:00.000Z",
                                      "departureCity": "LA",
                                      "arrivalDate": "1970-01-02T00:00:00.000Z",
                                      "destinationCity": "PARIS\n"
                                  }
                              },
                              "user": {
                                  "type": "object",
                                  "example": {
                                    "id": "1",
                                    "name": "VLAST"
                                  }
                              },
                              "seat": {
                                  "type": "object",
                                  "example": {
                                    "id": "1",
                                    "seatNumber": "D12",
                                    "type": "ECONOMY"
                                  }
                              }
                          }
                      }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "status": 404,
                    "message": "Ticket not found"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Tickets"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4"
            },
            "description": "Ticket ID"
          }
        ],
        "summary": "Return result HIT API update ticket by Id",
        "description": "This is an API for updatting ticket data based on Id",
        "requestBody": {
          "description": "This is a request body for update ticket",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bookingDate": {
                    "type": "string",
                    "example": "2024-05-27T19:00:00.000Z"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success editting ticket data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Ticket updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "example" : {
                        "id": {
                          "type": "integer",
                          "example" : 1
                        },
                        "code":{
                          "type": "string",
                          "example": "BA-001"
                        },
                        "flightId": {
                          "type": "integer",
                          "example": 1
                        },
                        "userId":{
                          "type": "integer",
                          "example": 1
                        },
                        "seatId":{
                          "type": "integer",
                          "example": 1
                        },
                        "bookingDate": {
                          "type": "string",
                          "example":"2024-05-27T19:00:00.000Z"
                        },
                        "price": {
                          "type": "integer",
                          "example": 4000000
                        },
                        "flight":{
                          "type": "object",
                          "example":
                            {
                              "id": "1",
                              "planeId": "1",
                              "departureDate": "1970-01-01T00:00:00.000Z",
                              "departureCity": "LA GALAXY",
                              "departureCityCode": "LA",
                              "arrivalDate": "1970-01-02T00:00:00.000Z",
                              "destinationCity": "PARIS\n",
                              "destinationCityCode": "PAR",
                              "price": 3500000
                            }
                          },
                            "user": {
                              "type": "object",
                              "example": 
                              {
                                "id": "1",
                                "name": "VLAST",
                                "phoneNumber": "0180829729",
                                "role": "CUSTOMER"
                              }
                            }, 
                            "seat": {
                              "type": "object",
                              "example": 
                              {
                                "id": "1",
                                "flightId": "1",
                                "seatNumber": "D12",
                                "isBooked": false,
                                "type": "ECONOMY"
                              }
                        } 
                      }                    
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "status": 404,
                    "message": "Ticket not found"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tickets"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2"
            },
            "description": "Ticket ID"
          }
        ],
        "summary": "Return result HIT API delete ticket by Id",
        "description": "This is an API for deletting ticket data based on Id",
        "responses": {
          "200": {
            "description": "Success deletting ticket data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "ticket deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "status": 404,
                    "message": "Ticket not found"
                  }
                }
              }
            }
          }
        }
      }
    },

    "/transactions/bank": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Return result HIT API create bank transaction",
        "description": "This is an API for creating bank transaction data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "clwt39o8b001m11bvi03e7jov"
            },
            "description": "Flight ID"
          }
        ],
        "requestBody": {
          "description": "This is a request body for create new bank transaction",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bank": {
                    "type": "string",
                    "example": "bri"
                  },
                  "payment_type": {
                    "type": "string",
                    "example": "permata"
                  },
                  "fullName":{
                    "type": "string",
                    "example": "Harry"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Maguire"
                  },
                  "phoneNumber": {
                    "type":"string",
                    "example":"081234567890"
                  },
                  "email": {
                    "type": "string",
                    "example":"harrym5@mail.com"
                  },
                  "first_title": {
                    "type": "string",
                    "example": "Mr."
                  },
                  "first_fullName": {
                    "type": "string",
                    "example": "Mischa"
                  },
                  "first_familyName": {
                    "type": "string",
                    "example": "Mudryk"
                  },
                  "first_ticketId": {
                    "type": "string",
                    "example": "tiket-1"
                  },
                  "first_citizenship": {
                    "type": "string",
                    "example": "Inggris"
                  },
                  "first_issuingCountry":{
                    "type": "string",
                    "example": "Ukraine"
                  },
                  "first_price": {
                    "type": "integer",
                    "example": 1000
                  },
                  "first_quantity" :{
                    "type": "integer",
                    "example":1
                  },
                  "second_title": {
                    "type": "string",
                    "example": "Mr."
                  },
                  "second_fullName": {
                    "type": "string",
                    "example": "Anthony"
                  },
                  "second_familyName": {
                    "type": "string",
                    "example": "El Gasing"
                  },
                  "second_ticketId": {
                    "type": "string",
                    "example": "tiket-2"
                  },
                  "second_citizenship": {
                    "type": "string",
                    "example": "Brazil"
                  },
                  "second_issuingCountry":{
                    "type": "string",
                    "example": "Inggris"
                  },
                  "second_price": {
                    "type": "integer",
                    "example": 1000
                  },
                  "second_quantity" :{
                    "type": "integer",
                    "example":1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new bank transaction data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Bank VA created successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "payment_type": "bank_transfer",
                        "transaction_id": "7f3b7853-2dba-4c26-94a7-bf6a6e9fbdc5",
                        "order_id": "f913fe17-8f9e-401e-a8d0-f6856e35acbe",
                        "gross_amount": "2000.00",
                        "transaction_time": "2024-05-30 18:13:26",
                        "transaction_status": "pending",
                        "payment_status": "accept",
                        "expiry_time": "2024-05-31 18:13:26",
                        "va_numbers": [
                          {
                            "bank": "bri",
                            "va_number": "047586269437312472"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/gopay": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Return result HIT API create gopay transaction",
        "description": "This is an API for creating gopay transaction data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "clwt39o8b001m11bvi03e7jov"
            },
            "description": "Flight ID"
          }
        ],
        "requestBody": {
          "description": "This is a request body for create new bank transaction",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName":{
                    "type": "string",
                    "example": "Harry"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Maguire"
                  },
                  "phoneNumber": {
                    "type":"string",
                    "example":"081234567890"
                  },
                  "email": {
                    "type": "string",
                    "example":"harrym5@mail.com"
                  },
                  "first_title": {
                    "type": "string",
                    "example": "Mr."
                  },
                  "first_fullName": {
                    "type": "string",
                    "example": "Mischa"
                  },
                  "first_familyName": {
                    "type": "string",
                    "example": "Mudryk"
                  },
                  "first_ticketId": {
                    "type": "string",
                    "example": "tiket-1"
                  },
                  "first_citizenship": {
                    "type": "string",
                    "example": "Inggris"
                  },
                  "first_issuingCountry":{
                    "type": "string",
                    "example": "Ukraine"
                  },
                  "first_price": {
                    "type": "integer",
                    "example": 1000
                  },
                  "first_quantity" :{
                    "type": "integer",
                    "example":1
                  },
                  "second_title": {
                    "type": "string",
                    "example": "Mr."
                  },
                  "second_fullName": {
                    "type": "string",
                    "example": "Anthony"
                  },
                  "second_familyName": {
                    "type": "string",
                    "example": "El Gasing"
                  },
                  "second_ticketId": {
                    "type": "string",
                    "example": "tiket-2"
                  },
                  "second_citizenship": {
                    "type": "string",
                    "example": "Brazil"
                  },
                  "second_issuingCountry":{
                    "type": "string",
                    "example": "Inggris"
                  },
                  "second_price": {
                    "type": "integer",
                    "example": 1000
                  },
                  "second_quantity" :{
                    "type": "integer",
                    "example":1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new gopay transaction data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "gopay transaction created successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "payment_type": "gopay",
                        "transaction_id": "a43b5dd0-c522-461a-9c8e-dba55cd11933",
                        "order_id": "d53621fb-42b4-48c1-a1ac-6658021157d0",
                        "gross_amount": "2000.00",
                        "transaction_time": "2024-05-30 18:23:58",
                        "transaction_status": "pending",
                        "payment_status": "accept",
                        "expiry_time": "2024-05-30 18:38:58",
                        "action": [
                          {
                            "name": "generate-qr-code",
                            "method": "GET",
                            "url": "https://api.sandbox.midtrans.com/v2/gopay/a43b5dd0-c522-461a-9c8e-dba55cd11933/qr-code"
                          },
                          {
                            "name": "deeplink-redirect",
                            "method": "GET",
                            "url": "https://simulator.sandbox.midtrans.com/gopay/partner/app/payment-pin?id=0cc0e3c9-cba7-40f8-899a-c1ed685db002"
                          },
                          {
                            "name": "get-status",
                            "method": "GET",
                            "url": "https://api.sandbox.midtrans.com/v2/a43b5dd0-c522-461a-9c8e-dba55cd11933/status"
                          },
                          {
                            "name": "cancel",
                            "method": "POST",
                            "url": "https://api.sandbox.midtrans.com/v2/a43b5dd0-c522-461a-9c8e-dba55cd11933/cancel"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/transactions/creditcard": {
      "post": {
        "tags": ["Transactions"],
        "summary": "Return result HIT API create credit card transaction",
        "description": "This is an API for creating credit card transaction data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "clwt39o8b001m11bvi03e7jov"
            },
            "description": "Flight ID"
          }
        ],
        "requestBody": {
          "description": "This is a request body for create new bank transaction",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "card_number": {
                    "type": "string",
                    "example": "5264 2210 3887 4659"
                  },
                  "card_exp_month": {
                    "type": "integer",
                    "example": 10
                  },
                  "card_exp_year": {
                    "type": "integer",
                    "example": 2025
                  },
                  "card_cvv": {
                    "type": "string",
                    "example": "123"
                  },
                  "fullName":{
                    "type": "string",
                    "example": "Harry"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Maguire"
                  },
                  "phoneNumber": {
                    "type":"string",
                    "example":"081234567890"
                  },
                  "email": {
                    "type": "string",
                    "example":"harrym5@mail.com"
                  },
                  "first_title": {
                    "type": "string",
                    "example": "Mr."
                  },
                  "first_fullName": {
                    "type": "string",
                    "example": "Mischa"
                  },
                  "first_familyName": {
                    "type": "string",
                    "example": "Mudryk"
                  },
                  "first_ticketId": {
                    "type": "string",
                    "example": "tiket-1"
                  },
                  "first_citizenship": {
                    "type": "string",
                    "example": "Inggris"
                  },
                  "first_issuingCountry":{
                    "type": "string",
                    "example": "Ukraine"
                  },
                  "first_price": {
                    "type": "integer",
                    "example": 1000
                  },
                  "first_quantity" :{
                    "type": "integer",
                    "example":1
                  },
                  "second_title": {
                    "type": "string",
                    "example": "Mr."
                  },
                  "second_fullName": {
                    "type": "string",
                    "example": "Anthony"
                  },
                  "second_familyName": {
                    "type": "string",
                    "example": "El Gasing"
                  },
                  "second_ticketId": {
                    "type": "string",
                    "example": "tiket-2"
                  },
                  "second_citizenship": {
                    "type": "string",
                    "example": "Brazil"
                  },
                  "second_issuingCountry":{
                    "type": "string",
                    "example": "Inggris"
                  },
                  "second_price": {
                    "type": "integer",
                    "example": 1000
                  },
                  "second_quantity" :{
                    "type": "integer",
                    "example":1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new credit card transaction data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "CC Token & Transaction successfully"
                    },
                    "_token":{
                      "type": "string",
                      "example": "52642210-4659-49872837-a17f-4aaf-ba44-2e64f5936d75"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "payment_type": "credit_card",
                        "card_type": "debit",
                        "transaction_id": "49872837-a17f-4aaf-ba44-2e64f5936d75",
                        "order_id": "81252daf-f62a-45ae-ab09-6dcc0df8fc82",
                        "gross_amount": "2000.00",
                        "transaction_time": "2024-05-30 18:20:18",
                        "transaction_status": "pending",
                        "payment_status": "accept",
                        "expiry_time": "2024-06-07 18:20:18",
                        "redirect_url": "https://api.sandbox.midtrans.com/v2/3ds/redirect/49872837-a17f-4aaf-ba44-2e64f5936d75",
                        "bank": "bni"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/transactions/status/{id}": {
      "get": {
        "tags": ["Transactions Detail"],
        "summary": "Return result HIT API get transaction detail by id",
        "description": "This is an API for getting transaction detail based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "5d68db38-9ecc-4b70-9ad5-7e535b0dfea1"
            },
            "description": "Order ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success getting user data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message" : {
                      "type": "string",
                      "example": "user data retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "status": true,
                        "message": "Transaction data retrieved successfully",
                        "transaction_status": "expire",
                        "payment_status": "accept",
                        "transaction_id": "d8fa8827-0a33-4de1-915e-2355dc23bfc7",
                        "order_id": "5d68db38-9ecc-4b70-9ad5-7e535b0dfea1",
                        "merchant_id": "G600704758",
                        "currency": "IDR",
                        "gross_amount": "5000.00",
                        "payment_type": "bank_transfer",
                        "transaction_time": "2024-05-27 14:20:51",
                        "expiry_time": "2024-05-28 14:20:51",
                        "signature_key": "29bd251103d30168ef9fd2a42adfa5225695cae866938ac30d04743322028ac2cbc3a111823facd78e134a89cd83b315793e002efade94586be912709e70587f",
                        "va_numbers": [
                            {
                                "bank": "bri",
                                "va_number": "047587591116037852"
                            }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Id Not Found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Transactions Detail"],
        "summary": "Return result HIT API update user by Id",
        "description": "This is an API for updatting user data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "f63de85d-1562-4e1e-bdf2-555854b6d759"
            },
            "description": "Order ID"
          }
        ],
        "responses": {
          "201": {
            "description": "Success update transaction status based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "status": true,
                        "transaction_status": "pending",
                        "payment_status": "accept",
                        "transaction_id": "c0b71445-bdee-41c9-bc49-f426e8536815",
                        "order_id": "b3b33c1f-bbf2-4aa3-9b7d-90df26a3d1c2",
                        "merchant_id": "G600704758",
                        "currency": "IDR",
                        "gross_amount": "1000.00",
                        "payment_type": "bank_transfer",
                        "transaction_time": "2024-05-25 22:41:07",
                        "expiry_time": "2024-05-26 22:41:07",
                        "signature_key": "2e149d996d4c500a44a1fcd39c312e6eb48d3523f768f5f70ac744d8e144de13d5233251fa2c78aeaa1156f78c29fe8365dec19131ee85926b5c8efef22e8a01",
                        "va_numbers": [
                          {
                            "bank": "bca",
                            "va_number": "04758844624"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Id Not Found"
                    }
                  }
                }
              }
            }
          }
        }
      }

    },

    "/users/": {
      "get": {
        "tags": ["Users"],
        "summary": "Return result HIT API get all users data",
        "description": "This is an API for getting all users data",
        "parameters" :[
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "84232417-b548-4e59-b22f-04f586057156"
            },
            "description": "User Name"
          },
          {
            "name": "page",
            "in":"query",
            "required":false,
            "schema":{
              "type":"integer",
              "example":1
            },
            "description": "Page Number"
          },
          {
            "name": "limit",
            "in":"query",
            "required":false,
            "schema":{
              "type":"integer",
              "example": 5
            },
            "description": "Limit Page"
          }
        ],
        "responses": {
          "200": {
            "description": "Success getting all users data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "all user data retrieved successfully"
                    },
                    "totalItems":{
                      "type": "integer",
                      "example": 22
                    },
                    "pagination":{
                      "type": "object",
                      "example": {
                        "totalPages": 5,
                        "currentPage": 1,
                        "pageItems": 5,
                        "nextPage": 2,
                        "prevPage": null
                      }
                    },
                    "data": {
                      "type": "object",
                      "example": [
                        {
                          "id": "clwte47zz000y1108cbsivgrj",
                          "name": "Andhika",
                          "phoneNumber": "628123456789",
                          "familyName": "Family",
                          "role": "BUYER",
                          "auth": {
                            "id": "clwte47zz000z1108cmm35526",
                            "email": "andhika@test.com",
                            "isVerified": true
                          }
                        },
                        {
                          "id": "clwte488g001e1108fp09kkpa",
                          "name": "Bella",
                          "phoneNumber": "628123456789",
                          "familyName": "Family",
                          "role": "BUYER",
                          "auth": {
                            "id": "clwte488g001f1108ni6t204i",
                            "email": "bella@test.com",
                            "isVerified": true
                          }
                        },
                        {
                          "id": "clwte480100121108f0boffxn",
                          "name": "Falah",
                          "phoneNumber": "628123456789",
                          "familyName": "Family",
                          "role": "BUYER",
                          "auth": {
                            "id": "clwte480100131108hpch57oi",
                            "email": "falah@test.com",
                            "isVerified": true
                          }
                        },
                        {
                          "id": "clwte47sa000u11086wh5x1qd",
                          "name": "Faris",
                          "phoneNumber": "628123456789",
                          "familyName": "Family",
                          "role": "BUYER",
                          "auth": {
                            "id": "clwte47sa000v110825uhtwtv",
                            "email": "faris@test.com",
                            "isVerified": true
                          }
                        },
                        {
                          "id": "clwte4889001c1108v1tuo242",
                          "name": "Ihsan",
                          "phoneNumber": "628123456789",
                          "familyName": "Family",
                          "role": "BUYER",
                          "auth": {
                            "id": "clwte4889001d1108adqgshni",
                            "email": "ihsan@test.com",
                            "isVerified": true
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Return result HIT API create user",
        "description": "This is an API for creating user data",
        "requestBody": {
          "description": "This is a request body for create new user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "skyflyproduction"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "08123456789"
                  },
                  "familyName": {
                    "type": "string",
                    "example": "jaya"
                  },
                  "role": {
                    "type": "string",
                    "example": "BUYER"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create new user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message" :{
                      "type": "string",
                      "example": "user created successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "641db720-370f-4a56-b8ac-fc993ceba92a",
                        "name": "skyflyproduction",
                        "phoneNumber": "08123456789",
                        "familyName": "jaya",
                        "role": "BUYER"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Field error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "\"name\" is required"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "System Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "\nInvalid `prisma.user.create()` invocation in\nC:\\Users\\ASUS\\Documents\\Kuliah\\Semester 6\\final-project\\BE-Rest-API-SkyFly\\controllers\\user.js:80:43\n\n  77 \n  78 try {\n  79 \n→ 80     const newUser = await prisma.user.create({\n           data: {\n             id: \"1430fdf4-b13b-487c-addc-9ad1e7a16734\",\n             name: \"skyflyproduction\",\n             phoneNumber: undefined,\n             role: \"ADMI\"\n                   ~~~~~~\n           }\n         })\n\nInvalid value for argument `role`. Expected RoleUser."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Return result HIT API get user by id",
        "description": "This is an API for getting user data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "clwhhi8j80002321eziy4dntm"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success getting user data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message" : {
                      "type": "string",
                      "example": "user data retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "clwhhi8j80002321eziy4dntm",
                        "name": "Alice",
                        "role": "BUYER",
                        "phoneNumber": "628123456789",
                        "Auth": {
                          "id": "clwhlya9r000912750qo8yqbt",
                          "email": "alice@test.com",
                          "isVerified": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Id Not Found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Return result HIT API update user by Id",
        "description": "This is an API for updatting user data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "clwhhi8j80002321eziy4dntm"
            },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "description": "This is a request body for update user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "skyflyproductionbest"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "0897654321"
                  },
                  "familyName":{
                    "type": "string",
                    "example": "jayajaya"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success editting user data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message":{
                      "type": "string",
                      "example": "User updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "example": {
                        "id": "641db720-370f-4a56-b8ac-fc993ceba92a",
                        "name": "skyflyproductionbest",
                        "phoneNumber": "0897654321",
                        "familyName": "jayajaya",
                        "role": "BUYER"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Id Not Found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Return result HIT API delete user by Id",
        "description": "This is an API for deletting user data based on Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "clwhhi8j80002321eziy4dntm"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success deletting user data based on Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "user deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "ID not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Id Not Found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  
  },
  "components": {
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
